@using NovyGorodAsp.Models.Posts
@using NovyGorod.Application.Contracts.Posts.Requests
@model NovyGorodAsp.Models.Posts.PostsViewModel
@{
    Layout = "_Layout";
    ViewBag.Title = Model.Type;
    ViewBag.MaxWidth = 900;
    
    var searchResult = Model.SearchResult;
    var paging = searchResult.Paging;
}

<nav aria-label="Posts pages">
    <ul class="pagination">
        <li class="page-item @(paging.HasPreviousPage ? "" : "disabled")">
            <a class="page-link"
               href=@Url.Action("ViewList", "Post", new SearchPostsRequest { Type = Model.Type, PageIndex = paging.PageIndex - 1, PageSize = paging.PageSize})>
                Previous
            </a>
        </li>
        <li class="page-item @(paging.HasNextPage ? "" : "disabled")">
            <a class="page-link"
               href=@Url.Action("ViewList", "Post", new SearchPostsRequest { Type = Model.Type, PageIndex = paging.PageIndex + 1, PageSize = paging.PageSize})>
                Next
            </a>
        </li>
    </ul>
</nav>

@await Html.PartialAsync("PostListContainerView", new PostListContainerViewModel {Posts = searchResult.Items})